package h3xadecimal.liteantiexploit.module.modules;

import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.event.PacketSendEvent;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientChatCommand;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientChatMessage;
import h3xadecimal.liteantiexploit.LiteAntiExploit;
import h3xadecimal.liteantiexploit.module.IPacketProcessor;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;

import java.util.regex.Pattern;

public class Log4j implements IPacketProcessor {
    private final Pattern regex = Pattern.compile("\\$\\{.+}");

    @Override
    public String name() {
        return "Log4j";
    }

    @Override
    public void onSend(PacketSendEvent event) {

    }

    @Override
    public void onReceive(PacketReceiveEvent event) {
        if (event.getPacketType() == PacketType.Play.Client.CHAT_MESSAGE) {
            WrapperPlayClientChatMessage pkt = new WrapperPlayClientChatMessage(event);
            if (detect(pkt.getMessage())) {
                event.setCancelled(true);
                alert(event);
            }
        } else if (event.getPacketType() == PacketType.Play.Client.CHAT_COMMAND) {
            WrapperPlayClientChatCommand pkt = new WrapperPlayClientChatCommand(event);
            if (detect(pkt.getCommand())) {
                event.setCancelled(true);
                alert(event);
            }
        }
    }

    @Override
    public void alert(PacketReceiveEvent event) {
        Player p = Bukkit.getPlayer(event.getUser().getUUID());
        String name = "Unknown";
        if (p != null) name = p.getName();
        LiteAntiExploit.getCore().getLogger().warning("[Log4j] 拦截了来自 " + name + "(" + event.getUser().getUUID().toString() + ")" + " 的Log4jExploit");
    }

    private boolean detect(String msg) {
        return regex.matcher(msg).matches();
    }
}
